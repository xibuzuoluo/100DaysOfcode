/*  Fraction sum */
#include<iostream>
using namespace std;

int main(){
	int n;
	cin >> n;
	int sumn = 0, sumd = 1;// Store the result, sumn/sumd
	while(n--){
		int num, deno;
		char slash; // Used to eat '/'
		cin >> num >> slash >> deno;
		// to add a/b + c/d = (a*d+c*b)/(b*d)
		sumn = sumn*deno + num*sumd;
		sumd = sumd*deno;
	}
	
	// fist calculate the reduction of a fraction
	// then calculate the greatest common divisor gcd, use Euclidean method
	int a = sumd, b = sumn, c;
	while(a != 0){
		c = a; a = b%a; b = c;
	}
	int gcd = b;
	// Divide the numerator and denominator by GCD
	sumd /= gcd;
	sumn /= gcd;
	if (sumd > 1)
		cout << sumn << '/' << sumd << endl;
	else
		cout << sumn << endl;
	return 0;
}
